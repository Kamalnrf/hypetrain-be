generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["referentialIntegrity"]
}

datasource db {
  provider             = "mysql"
  url                  = env("DATABASE_URL")
  referentialIntegrity = "prisma"
}

model User {
  id          Int          @id @default(autoincrement())
  twitterId   String       @unique
  name        String
  username    String
  email       String?
  isAdmin     Boolean      @default(false)
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  userTwitter UserTwitter?
  preferences Preferences?
  tweetQueue  TweetQueue[]
  activity    Activity[]
}

model UserTwitter {
  id           Int      @id @default(autoincrement())
  userId       Int      @unique
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  twitterId    String   @unique
  accessToken  String
  refreshToken String
  updatedAt    DateTime @updatedAt

  @@index([userId, twitterId])
}

model Preferences {
  id            Int      @id @default(autoincrement())
  userId        Int      @unique
  user          User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  likeTweets    Boolean
  retweetTweets Boolean
  updatedAt     DateTime @updatedAt

  @@index([userId])
}

model TweetQueue {
  id       Int     @id @default(autoincrement())
  tweetId  String  @unique
  authorId String
  user     User    @relation(fields: [authorId], references: [twitterId], onDelete: Cascade)
  text     String  @db.Text
  isHyped  Boolean

  @@index([tweetId, authorId])
}

model Activity {
  id        Int     @id @default(autoincrement())
  tweetId   String
  authorId  String
  userId    Int
  user      User    @relation(fields: [userId], references: [id], onDelete: Cascade)
  isLike    Boolean
  isRetweet Boolean

  @@index([tweetId, authorId])
}
